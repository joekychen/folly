f | MapUtil.h | s | 2.1K | 63 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | Conv.cpp | s | 3.8K | 127 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | RWSpinLock.h | s | 22K | 625 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | Makefile.am | g | 2.6K |  | Tudor Bosman | tudorb@fb.com | 1339702560 |  | Unbreak Ubuntu build.  Summary: follybenchmark and follyfingerprint need folly to work.  Test Plan: built on ubuntu  Reviewed By: andrewjcg@fb.com  FB internal diff: D494955
f | Malloc.h | s | 6.5K | 192 | Tudor Bosman | tudorb@fb.com | 1338934351 |  | Add #include <new> to folly/Malloc.h.  Test Plan: folly tests  Reviewed By: philipp@fb.com, andrei.alexandrescu@fb.com  FB internal diff: D486884, D487376
f | Synchronized.h | s | 19K | 588 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | Arena-inl.h | s | 1.9K | 59 | joekychen | chensi@healskare.cm | 1341912536 | Implementation of Arena.h functions | Update master
f | AtomicHashMap-inl.h | s | 13K | 360 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | ScopeGuard.h | s | 4.3K | 135 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | Fingerprint.h | s | 7.2K | 233 | Tudor Bosman | tudorb@fb.com | 1339543388 |  | Move Rabin fingerprinting code to folly.  Summary: Also generate fingerprint tables every time, so the code doesn't rot.  TODO(tudorb): move benchmark to folly TODO(tudorb): Include the program used to generate the polynomials (can't build as it requires NTL from http://www.shoup.net/ntl/)  Test Plan: folly/test  Reviewed By: andrei.alexandrescu@fb.com  FB internal diff: D492455
f | configure.ac | g | 2.5K |  | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | dynamic.cpp | s | 1.4K | 31 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | ProducerConsumerQueue.h | s | 4.8K | 154 | Mike Curtiss | mcurtiss@fb.com | 1340332731 |  | Add sizeGuess() member to ProducerConsumerQueue  Summary: This is part 1 of a change to add hysteretic behavior to a blocking queue based on ProducerConsumerQueue.  Knowing the size is useful for monitoring and possibly for objects that contain a ProducerConsumerQueue.  Test Plan: Added tiny test-case.  Tests pass  Reviewed By: delong.j@fb.com  FB internal diff: D496787
f | FormatArg.h | s | 5.4K | 224 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | Benchmark.cpp | s | 11K | 364 | Rajat Goel | rajatgoel2010@fb.com | 1340830220 |  | Adding support to output benchmarks result in JSON  Summary: The main reason being so that they can be fed to some automated systems, if required.  Test Plan: Just ran few benchmarks locally  Reviewed By: andrewjcg@fb.com  FB internal diff: D501025
d | experimental |  | 6 items |  | Tudor Bosman | tudorb@fb.com | 1340830276 |  | Minor changes to folly/experimental/io  Reviewed By: philipp@fb.com  FB internal diff: D491952
f | ThreadCachedInt.h | s | 5.3K | 151 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | Conv.h | s | 25K | 760 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | GroupVarint.h | s | 17K | 542 | Tudor Bosman | tudorb@fb.com | 1339103509 |  | Deuglify unaligned accesses in GroupVarint.  Test Plan: folly/test  Reviewed By: andrei.alexandrescu@fb.com  FB internal diff: D488631
f | String.h | s | 11K | 320 | Tudor Bosman | tudorb@fb.com | 1339702549 |  | Clarify split / splitTo comments.  Test Plan: No  Reviewed By: delong.j@fb.com  FB internal diff: D494525
f | TimeoutQueue.h | s | 3.8K | 113 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | Random.h | s | 796B | 25 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | dynamic-inl.h | s | 23K | 723 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | Histogram-inl.h | s | 8.2K | 229 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | String-inl.h | s | 12K | 402 | Chip Turner | chip@fb.com | 1339702546 |  | Move and refactor code  Summary:  Moves some string manipulation code like humanify into folly  Moves hash-related functions into folly and removes some old includes to clean up some code  Adds generic hashing for tuples, similar to pairs  Updates all of the build breakages from the above  Test Plan: run unit tests  Reviewed By: delong.j@fb.com  FB internal diff: D490478
f | Unicode.cpp | s | 1.7K | 44 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | ThreadCachedArena.cpp | s | 1.3K | 36 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | Format.h | s | 7.9K | 237 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | Arena.h | s | 6.0K | 190 | Tudor Bosman | tudorb@fb.com | 1338878200 |  | Check the return value from malloc / realloc.  Summary: https://github.com/facebook/folly/issues/7  Wrappers: checkedMalloc / checkedRealloc / checkedCalloc  Test Plan: all folly tests  FB internal diff: D486841
f | Range.cpp | s | 1.1K | 31 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | small_vector.h | s | 33K | 1018 | Tudor Bosman | tudorb@fb.com | 1338878200 |  | Check the return value from malloc / realloc.  Summary: https://github.com/facebook/folly/issues/7  Wrappers: checkedMalloc / checkedRealloc / checkedCalloc  Test Plan: all folly tests  FB internal diff: D486841
f | json.h | s | 3.2K | 97 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | sorted_vector_types.h | s | 19K | 527 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | Range.h | s | 14K | 478 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | dynamic.h | s | 14K | 429 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
d | docs |  | 21 items |  | Mike Curtiss | mcurtiss@fb.com | 1340332731 |  | Add sizeGuess() member to ProducerConsumerQueue  Summary: This is part 1 of a change to add hysteretic behavior to a blocking queue based on ProducerConsumerQueue.  Knowing the size is useful for monitoring and possibly for objects that contain a ProducerConsumerQueue.  Test Plan: Added tiny test-case.  Tests pass  Reviewed By: delong.j@fb.com  FB internal diff: D496787
f | Benchmark.h | s | 11K | 338 | Sherman Ye | shermanye@fb.com | 1340332655 |  | Fix a typo in benchmark comments  Summary: As title  Test Plan: Deployed to wormhole_apps.dragon.dev  Reviewed By: asharma@fb.com  FB internal diff: D493253
f | TimeoutQueue.cpp | s | 2.2K | 66 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | Traits.h | s | 8.4K | 210 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | ConcurrentSkipList.h | s | 27K | 720 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | json.cpp | s | 16K | 596 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | PackedSyncPtr.h | s | 4.8K | 133 | Tudor Bosman | tudorb@fb.com | 1338875952 |  | Typos.  Summary: As pointed out by orbitcowboy at https://github.com/facebook/folly/issues/6  Test Plan: No  Reviewers: jdelong, aalexandre  Reviewed By: jdelong  CC: folly@lists, bagashe  Differential Revision: https://phabricator.fb.com/D486754
f | StlAllocator.h | s | 3.0K | 103 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | Random.cpp | s | 1.0K | 30 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | ConcurrentSkipList-inl.h | s | 5.7K | 184 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | LICENSE | g | 9.9K |  | Jordan DeLong | jdelong@fb.com | 1338833996 |  | Add a LICENSE file for folly  Summary: Adds a copy of the apache license 2.0.  Test Plan: None.
f | GroupVarint.cpp | s | 921B | 26 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | FBVector.h | s | 25K | 849 | Tudor Bosman | tudorb@fb.com | 1338878200 |  | Check the return value from malloc / realloc.  Summary: https://github.com/facebook/folly/issues/7  Wrappers: checkedMalloc / checkedRealloc / checkedCalloc  Test Plan: all folly tests  FB internal diff: D486841
f | Logging.h | s | 1.7K | 41 | Chip Turner | chip@fb.com | 1339702546 |  | Move and refactor code  Summary:  Moves some string manipulation code like humanify into folly  Moves hash-related functions into folly and removes some old includes to clean up some code  Adds generic hashing for tuples, similar to pairs  Updates all of the build breakages from the above  Test Plan: run unit tests  Reviewed By: delong.j@fb.com  FB internal diff: D490478
f | AtomicHashMap.h | s | 13K | 342 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
d | build |  | 4 items |  | Andrew Gallagher | agallagher@fb.com | 1339702555 |  | Fix clang narrowing error in GroupVarintTables  Summary: The __m128i type is a pair of 64-bit signed ints and the values generated in generate_varint_tables.py overflow this range, which causes clang to complain.  Test Plan: Built and ran unittests.  Also verified that the GroupVarintTable.o data section was identical with and w/o this change.  Reviewed By: tudorb@fb.com  FB internal diff: D494645
f | Format-inl.h | s | 30K | 957 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | Format.cpp | s | 3.4K | 116 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | SConstruct.double-conversion | g | 1008B |  | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | Bits.h | s | 13K | 478 | Tudor Bosman | tudorb@fb.com | 1340830276 |  | Minor changes to folly/experimental/io  Reviewed By: philipp@fb.com  FB internal diff: D491952
f | Unicode.h | s | 1.1K | 30 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | String.cpp | s | 8.2K | 266 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | Histogram.h | s | 11K | 336 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | README | g | 1.5K |  | Jordan DeLong | jdelong@fb.com | 1338833996 |  | Update the folly/README  Summary: Now that we have an Overview.md.  Test Plan: None.
f | Preprocessor.h | s | 2.0K | 60 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | Portability.h | s | 847B | 25 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | ThreadLocal.h | s | 9.4K | 290 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
d | m4 |  | 5 items |  | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | Likely.h | s | 1.1K | 33 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | IntrusiveList.h | s | 4.6K | 125 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | AtomicHashArray-inl.h | s | 12K | 339 | Jordan DeLong | jdelong@fb.com | 1338938465 |  | Fix some memory_order parameters in AtomicHashMap  Summary: Herb Sutter noticed an error in the AHM find pseudo-code at the C++ conference, and the error is in the real implementation too. We should be using memory_order_acquire, because we need the load of the key to happen before any subsequent loads of the value itself. Our implementation is conservative for a memory_order_relaxed load (we generate the same code as if it were memory_order_acquire---i.e. a compiler barrier but no memory barriers), so this should not change the generated code.  Correctness is a good idea, though (when we upgrade to gcc 4.7's atomics it might not be as conservative).  Also, erase was doing three loads when one is enough.  ... also fixes an exception safety bug in insert.  (Phew.)  Test Plan: Ran the AHM unit tests, debug and opt.  Reviewed By: andrei.alexandrescu@fb.com  FB internal diff: D485744
d | test |  | 43 items |  | Mike Curtiss | mcurtiss@fb.com | 1340332731 |  | Add sizeGuess() member to ProducerConsumerQueue  Summary: This is part 1 of a change to add hysteretic behavior to a blocking queue based on ProducerConsumerQueue.  Knowing the size is useful for monitoring and possibly for objects that contain a ProducerConsumerQueue.  Test Plan: Added tiny test-case.  Tests pass  Reviewed By: delong.j@fb.com  FB internal diff: D496787
f | FBString.h | s | 69K | 2025 | Andrew Gallagher | agallagher@fb.com | 1338938467 |  | fbstring: remove reference to /home/engshare/ paths  Summary: Reported by https://github.com/facebook/folly/issues/8  Test Plan: no  Reviewed By: tudorb@fb.com  FB internal diff: D487572
f | AtomicHashArray.h | s | 10.0K | 238 | Jordan DeLong | jdelong@fb.com | 1338938465 |  | Fix some memory_order parameters in AtomicHashMap  Summary: Herb Sutter noticed an error in the AHM find pseudo-code at the C++ conference, and the error is in the real implementation too. We should be using memory_order_acquire, because we need the load of the key to happen before any subsequent loads of the value itself. Our implementation is conservative for a memory_order_relaxed load (we generate the same code as if it were memory_order_acquire---i.e. a compiler barrier but no memory barriers), so this should not change the generated code.  Correctness is a good idea, though (when we upgrade to gcc 4.7's atomics it might not be as conservative).  Also, erase was doing three loads when one is enough.  ... also fixes an exception safety bug in insert.  (Phew.)  Test Plan: Ran the AHM unit tests, debug and opt.  Reviewed By: andrei.alexandrescu@fb.com  FB internal diff: D485744
f | SmallLocks.h | s | 8.0K | 242 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | DiscriminatedPtr.h | s | 6.3K | 195 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | Foreach.h | s | 9.3K | 232 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | Hash.h | s | 7.0K | 251 | Chip Turner | chip@fb.com | 1339702546 |  | Move and refactor code  Summary:  Moves some string manipulation code like humanify into folly  Moves hash-related functions into folly and removes some old includes to clean up some code  Adds generic hashing for tuples, similar to pairs  Updates all of the build breakages from the above  Test Plan: run unit tests  Reviewed By: delong.j@fb.com  FB internal diff: D490478
d | detail |  | 7 items |  | Tudor Bosman | tudorb@fb.com | 1339543388 |  | Move Rabin fingerprinting code to folly.  Summary: Also generate fingerprint tables every time, so the code doesn't rot.  TODO(tudorb): move benchmark to folly TODO(tudorb): Include the program used to generate the polynomials (can't build as it requires NTL from http://www.shoup.net/ntl/)  Test Plan: folly/test  Reviewed By: andrei.alexandrescu@fb.com  FB internal diff: D492455
f | ThreadCachedArena.h | s | 2.3K | 66 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
f | eventfd.h | s | 1.9K | 65 | Jordan DeLong | jdelong@fb.com | 1338661169 |  | Pull from FB rev 63ce89e2f2301e6bba44a111cc7d4218022156f6
